{
  "service": {
    "service": "catalog-shop",
    "serviceObject": {
      "name": "catalog-shop"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.7",
      "region": "us-east-1",
      "stage": "dev",
      "environment": {
        "CATALOG_TABLE": "CatalogTable",
        "PAYMENT_TOPIC": "arn:aws:sns:us-east-1:#{AWS::AccountId}:PaymentTopic"
      },
      "iam": {
        "role": "arn:aws:iam::367314496165:role/LambdaAccessToDynamoDB"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetDashitemsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/catalog-shop-dev-get-items"
            }
          },
          "PaymentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/catalog-shop-dev-payment"
            }
          },
          "SetDashitemsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/catalog-shop-dev-set-items"
            }
          },
          "OrderDashfullfilmentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/catalog-shop-dev-order-fullfilment"
            }
          },
          "GetDashitemsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/catalog-shop/dev/1702660202991-2023-12-15T17:10:02.991Z/catalog-shop.zip"
              },
              "Handler": "handler.get_items",
              "Runtime": "python3.7",
              "FunctionName": "catalog-shop-dev-get-items",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CATALOG_TABLE": "CatalogTable",
                  "PAYMENT_TOPIC": {
                    "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:PaymentTopic"
                  }
                }
              },
              "Role": "arn:aws:iam::367314496165:role/LambdaAccessToDynamoDB"
            },
            "DependsOn": [
              "GetDashitemsLogGroup"
            ]
          },
          "PaymentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/catalog-shop/dev/1702660202991-2023-12-15T17:10:02.991Z/catalog-shop.zip"
              },
              "Handler": "handler.payment",
              "Runtime": "python3.7",
              "FunctionName": "catalog-shop-dev-payment",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CATALOG_TABLE": "CatalogTable",
                  "PAYMENT_TOPIC": {
                    "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:PaymentTopic"
                  }
                }
              },
              "Role": "arn:aws:iam::367314496165:role/LambdaAccessToDynamoDB"
            },
            "DependsOn": [
              "PaymentLogGroup"
            ]
          },
          "SetDashitemsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/catalog-shop/dev/1702660202991-2023-12-15T17:10:02.991Z/catalog-shop.zip"
              },
              "Handler": "handler.set_items",
              "Runtime": "python3.7",
              "FunctionName": "catalog-shop-dev-set-items",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CATALOG_TABLE": "CatalogTable",
                  "PAYMENT_TOPIC": {
                    "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:PaymentTopic"
                  }
                }
              },
              "Role": "arn:aws:iam::367314496165:role/LambdaAccessToDynamoDB"
            },
            "DependsOn": [
              "SetDashitemsLogGroup"
            ]
          },
          "OrderDashfullfilmentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/catalog-shop/dev/1702660202991-2023-12-15T17:10:02.991Z/catalog-shop.zip"
              },
              "Handler": "handler.order_fullfilment",
              "Runtime": "python3.7",
              "FunctionName": "catalog-shop-dev-order-fullfilment",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CATALOG_TABLE": "CatalogTable",
                  "PAYMENT_TOPIC": {
                    "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:PaymentTopic"
                  }
                }
              },
              "Role": "arn:aws:iam::367314496165:role/LambdaAccessToDynamoDB"
            },
            "DependsOn": [
              "OrderDashfullfilmentLogGroup"
            ]
          },
          "GetDashitemsLambdaVersionX8HZWE9qqIZVc7cQWATV3xR3jL01eG8kQyZ3Z9iUZCI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashitemsLambdaFunction"
              },
              "CodeSha256": "9a/V/TJuG+GRUz9pykbA0b2LlH0tBFTo+Nip7ik7mkI="
            }
          },
          "PaymentLambdaVersionUB9BVUouxKTrG6YMOCFkI3b4djJHLVmLAqNSwQZY48": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PaymentLambdaFunction"
              },
              "CodeSha256": "9a/V/TJuG+GRUz9pykbA0b2LlH0tBFTo+Nip7ik7mkI="
            }
          },
          "SetDashitemsLambdaVersionGqe9JJHxTWmcEeHFNm2ZoaeG1FXK9Q7cNhaiwLqlTE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SetDashitemsLambdaFunction"
              },
              "CodeSha256": "9a/V/TJuG+GRUz9pykbA0b2LlH0tBFTo+Nip7ik7mkI="
            }
          },
          "OrderDashfullfilmentLambdaVersion0O33gE0xrCq5V8uCKDLamNFtFCYbrYIrltV3jzzGmo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OrderDashfullfilmentLambdaFunction"
              },
              "CodeSha256": "9a/V/TJuG+GRUz9pykbA0b2LlH0tBFTo+Nip7ik7mkI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-catalog-shop",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceItems": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "items",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceBuyitem": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "buy_item",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSet": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "set",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSetCountVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceSet"
              },
              "PathPart": "{count}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodItemsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceItems"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBuyitemOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceBuyitem"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSetCountVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceSetCountVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodItemsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceItems"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashitemsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashitemsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodBuyitemPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBuyitem"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PaymentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSetCountVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSetCountVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SetDashitemsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SetDashitemsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1702660179552": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodItemsOptions",
              "ApiGatewayMethodBuyitemOptions",
              "ApiGatewayMethodSetCountVarOptions",
              "ApiGatewayMethodItemsGet",
              "ApiGatewayMethodBuyitemPost",
              "ApiGatewayMethodSetCountVarGet"
            ]
          },
          "GetDashitemsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashitemsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PaymentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PaymentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SetDashitemsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SetDashitemsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OrderDashfullfilmentSnsSubscriptionPaymentTopic": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:PaymentTopic"
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "OrderDashfullfilmentLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "OrderDashfullfilmentLambdaPermissionPaymentTopicSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OrderDashfullfilmentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:PaymentTopic"
              }
            }
          },
          "CatalogTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "CatalogTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "item_id",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "item_id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "PaymentTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": "PaymentTopic",
              "TopicName": "PaymentTopic"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-catalog-shop-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetDashitemsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashitemsLambdaVersionX8HZWE9qqIZVc7cQWATV3xR3jL01eG8kQyZ3Z9iUZCI"
            },
            "Export": {
              "Name": "sls-catalog-shop-dev-GetDashitemsLambdaFunctionQualifiedArn"
            }
          },
          "PaymentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PaymentLambdaVersionUB9BVUouxKTrG6YMOCFkI3b4djJHLVmLAqNSwQZY48"
            },
            "Export": {
              "Name": "sls-catalog-shop-dev-PaymentLambdaFunctionQualifiedArn"
            }
          },
          "SetDashitemsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SetDashitemsLambdaVersionGqe9JJHxTWmcEeHFNm2ZoaeG1FXK9Q7cNhaiwLqlTE"
            },
            "Export": {
              "Name": "sls-catalog-shop-dev-SetDashitemsLambdaFunctionQualifiedArn"
            }
          },
          "OrderDashfullfilmentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OrderDashfullfilmentLambdaVersion0O33gE0xrCq5V8uCKDLamNFtFCYbrYIrltV3jzzGmo"
            },
            "Export": {
              "Name": "sls-catalog-shop-dev-OrderDashfullfilmentLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-catalog-shop-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "catalogTable": "CatalogTable",
      "paymentTopic": "PaymentTopic"
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-python-requirements",
      "serverless-pseudo-parameters"
    ],
    "pluginsData": {},
    "functions": {
      "get-items": {
        "handler": "handler.get_items",
        "timeout": 6,
        "events": [
          {
            "http": {
              "path": "items",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "catalog-shop-dev-get-items",
        "package": {},
        "memory": 1024,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "GetDashitemsLambdaVersionX8HZWE9qqIZVc7cQWATV3xR3jL01eG8kQyZ3Z9iUZCI"
      },
      "payment": {
        "handler": "handler.payment",
        "events": [
          {
            "http": {
              "path": "buy_item",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "catalog-shop-dev-payment",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "PaymentLambdaVersionUB9BVUouxKTrG6YMOCFkI3b4djJHLVmLAqNSwQZY48"
      },
      "set-items": {
        "handler": "handler.set_items",
        "events": [
          {
            "http": {
              "path": "set/{count}",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "catalog-shop-dev-set-items",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "SetDashitemsLambdaVersionGqe9JJHxTWmcEeHFNm2ZoaeG1FXK9Q7cNhaiwLqlTE"
      },
      "order-fullfilment": {
        "handler": "handler.order_fullfilment",
        "events": [
          {
            "sns": "arn:aws:sns:us-east-1:#{AWS::AccountId}:PaymentTopic"
          }
        ],
        "name": "catalog-shop-dev-order-fullfilment",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "OrderDashfullfilmentLambdaVersion0O33gE0xrCq5V8uCKDLamNFtFCYbrYIrltV3jzzGmo"
      }
    },
    "resources": {
      "Resources": {
        "CatalogTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "CatalogTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "item_id",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "item_id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "PaymentTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "DisplayName": "PaymentTopic",
            "TopicName": "PaymentTopic"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "catalog-shop",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "exclude": [
          "node_modules/**",
          "venv/**",
          "__pycache__/**"
        ],
        "artifactsS3KeyDirname": "serverless/catalog-shop/dev/code-artifacts",
        "artifact": "/home/ec2-user/environment/retail-store-workshop/backend/.serverless/catalog-shop.zip",
        "artifactDirectoryName": "serverless/catalog-shop/dev/1702660202991-2023-12-15T17:10:02.991Z"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/ec2-user/environment/retail-store-workshop/backend/.serverless/catalog-shop.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/catalog-shop/dev/1702660202991-2023-12-15T17:10:02.991Z",
    "artifact": "catalog-shop.zip"
  }
}